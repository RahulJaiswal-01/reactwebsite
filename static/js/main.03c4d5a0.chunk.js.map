{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Mode","onClick","toggleMode","style","color","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.03c4d5a0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n\r\n                    </ul>\r\n\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n\r\n                    <div className={`form-check form-switch\r\n                     text-${props.Mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\"  style={{ color: props.Mode === 'white' ? 'black' : 'red' }}htmlFor=\"flexSwitchCheckDefault\">Dark-Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'about'\r\n};","import React, { useState } from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to uppercase\",\"success\");\r\n    }\r\n    const handlelowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to lowercase\",\"success\");\r\n\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"text is clear\",\"success\");\r\n\r\n\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    //copy to clipboard\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"MyBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"copied to clipboard\",\"success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\" Extra spaces removed\",\"success\");\r\n\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    //  text=\"new text\"; //Wrong way to change the state\r\n    //  setText(\"new text\"); //Right way to change the state\r\n\r\n\r\n    return (\r\n        <>        <div className=\"conatiner\" style={{ color: props.Mode === 'light' ? 'dark' : 'black' }}>\r\n            <h1 >{props.heading}</h1>\r\n\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.Mode === 'dark' ? 'grey' : 'light', color: props.Mode === 'dark' ? 'light' : 'black' }} id=\"MyBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handlelowClick}>Convert to lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy to Clipboard</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n\r\n        </div> \r\n\r\n            <div className=\"container my-3\" style={{ color: props.Mode === 'light' ? 'dark' : 'black' }}>\r\n                <h2>our text summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length}characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                <h2>preview</h2>\r\n                <p>{text.length>0?text:\"Enter something in the textbox  to preview here\"}</p>\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n    }\r\n    return (\r\n       props.alert && <div className = {`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong> {capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch\n  \n\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");//whether dark mode is enabled or not \n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n  }\n  setTimeout(()=>{\n    setAlert(null);\n  },2000)\n\n  const toggleMode = () => {\n    if (Mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n    showAlert(\"light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n  \n    <>\n    {/* <Router> */}\n      <Navbar title=\"TEXT-CONVERTOR\" mode={Mode} toggleMode={toggleMode} />\n\n <Alert alert={alert}/>\n   <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text below \" mode={Mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n        </div>\n        {/* </Router> */}\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}